{
  "openapi": "3.0.0",
  "info": {
    "title": "Vendo Backend API",
    "version": "1.0.0",
    "description": "API documentation for the Vendo Backend project"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get a list of products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": [
          "Products"
        ],
        "security": {
          "bearerAuth": []
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "mainImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "description": "Refresh token cookie",
                "schema": {
                  "type": "string",
                  "example": "refreshToken=your_refresh_token; HttpOnly; Path=/; Max-Age=604800; SameSite=None; Secure"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict (email already in use)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "description": "Refresh token cookie",
                "schema": {
                  "type": "string",
                  "example": "refreshToken=your_refresh_token; HttpOnly; Path=/; Max-Age=604800; SameSite=None; Secure"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized (invalid email or password)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "description": "Refresh the access token using the refresh token stored in the cookie.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid or expired refresh token)"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user profile",
        "description": "Get the profile of the currently logged-in user.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid or expired access token)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update user profile",
        "description": "Update the profile of the currently logged-in user.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "oldPassword": {
                    "type": "string"
                  },
                  "profilePicture": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile picture (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid data)"
          },
          "401": {
            "description": "Unauthorized (invalid or expired access token) or incorrect old password"
          }
        }
      }
    },
    "/users/:id": {
      "get": {
        "summary": "Get a user profile",
        "description": "Get the profile of a specific user.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "description": {
      "0": "U",
      "1": "s",
      "2": "e",
      "3": "r",
      "4": " ",
      "5": "m",
      "6": "a",
      "7": "n",
      "8": "a",
      "9": "g",
      "10": "e",
      "11": "m",
      "12": "e",
      "13": "n",
      "14": "t"
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The product ID"
          },
          "title": {
            "type": "string",
            "description": "The product title"
          },
          "location": {
            "type": "string",
            "description": "The product location"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The product phone number"
          },
          "price": {
            "type": "number",
            "description": "The product price"
          },
          "category": {
            "type": "string",
            "description": "The product category"
          },
          "description": {
            "type": "string",
            "description": "The product description"
          },
          "mainImage": {
            "type": "string",
            "description": "The main image of the product"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The images of the product"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Products",
      "description": "Product management and retrieval"
    },
    {
      "name": "User",
      "description": "User management"
    }
  ]
}